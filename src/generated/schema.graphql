### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

input CreateUserInput {
  email: String!
  firstName: String
  lastName: String
  middleName: String
  password: String!
  roles: [UserRole!]!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  signIn(data: SignInInput!): AuthPayload!
  signUp(data: SignUpInput!): AuthPayload!
}

type Query {
  me(name: String): User
  users(name: String): [User!]!
}

input SignInInput {
  email: String!
  password: String!
}

input SignUpInput {
  email: String!
  firstName: String
  lastName: String
  password: String!
}

type User {
  email: String!
  id: ID!
  name: String!
  roles: [UserRole!]!
}

enum UserRole {
  ADMIN
  EMPLOYEE
}
